/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bandwidth

import (
	"encoding/json"
)

// checks if the MachineDetectionConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineDetectionConfiguration{}

// MachineDetectionConfiguration The machine detection request used to perform <a href='/docs/voice/guides/machineDetection'>machine detection</a> on the call. Currently, there is an issue where decimal values are not getting processed correctly. Please use whole number values. We are working to resolve this issue. Please contact Bandwidth Support if you need more information.
type MachineDetectionConfiguration struct {
	Mode *MachineDetectionModeEnum `json:"mode,omitempty"`
	// The timeout used for the whole operation, in seconds. If no result is determined in this period, a callback with a `timeout` result is sent.
	DetectionTimeout NullableFloat64 `json:"detectionTimeout,omitempty"`
	// If no speech is detected in this period, a callback with a 'silence' result is sent.
	SilenceTimeout NullableFloat64 `json:"silenceTimeout,omitempty"`
	// When speech has ended and a result couldn't be determined based on the audio content itself, this value is used to determine if the speaker is a machine based on the speech duration. If the length of the speech detected is greater than or equal to this threshold, the result will be 'answering-machine'. If the length of speech detected is below this threshold, the result will be 'human'.
	SpeechThreshold NullableFloat64 `json:"speechThreshold,omitempty"`
	// Amount of silence (in seconds) before assuming the callee has finished speaking.
	SpeechEndThreshold NullableFloat64 `json:"speechEndThreshold,omitempty"`
	// When an answering machine is detected, the amount of silence (in seconds) before assuming the message has finished playing.  If not provided it will default to the speechEndThreshold value.
	MachineSpeechEndThreshold NullableFloat64 `json:"machineSpeechEndThreshold,omitempty"`
	// If set to 'true' and if an answering machine is detected, the 'answering-machine' callback will be delayed until the machine is done speaking, or an end of message tone is detected, or until the 'detectionTimeout' is exceeded. If false, the 'answering-machine' result is sent immediately.
	DelayResult NullableBool `json:"delayResult,omitempty"`
	// The URL to send the 'machineDetectionComplete' webhook when the detection is completed. Only for 'async' mode.
	CallbackUrl NullableString `json:"callbackUrl,omitempty"`
	CallbackMethod NullableCallbackMethodEnum `json:"callbackMethod,omitempty"`
	// Basic auth username.
	Username NullableString `json:"username,omitempty"`
	// Basic auth password.
	Password NullableString `json:"password,omitempty"`
	// A fallback URL which, if provided, will be used to retry the machine detection complete webhook delivery in case `callbackUrl` fails to respond
	FallbackUrl NullableString `json:"fallbackUrl,omitempty"`
	FallbackMethod NullableCallbackMethodEnum `json:"fallbackMethod,omitempty"`
	// Basic auth username.
	FallbackUsername NullableString `json:"fallbackUsername,omitempty"`
	// Basic auth password.
	FallbackPassword NullableString `json:"fallbackPassword,omitempty"`
}

// NewMachineDetectionConfiguration instantiates a new MachineDetectionConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineDetectionConfiguration() *MachineDetectionConfiguration {
	this := MachineDetectionConfiguration{}
	var mode MachineDetectionModeEnum = ASYNC
	this.Mode = &mode
	var detectionTimeout float64 = 15
	this.DetectionTimeout = *NewNullableFloat64(&detectionTimeout)
	var silenceTimeout float64 = 10
	this.SilenceTimeout = *NewNullableFloat64(&silenceTimeout)
	var speechThreshold float64 = 10
	this.SpeechThreshold = *NewNullableFloat64(&speechThreshold)
	var speechEndThreshold float64 = 5
	this.SpeechEndThreshold = *NewNullableFloat64(&speechEndThreshold)
	var delayResult bool = false
	this.DelayResult = *NewNullableBool(&delayResult)
	var callbackMethod CallbackMethodEnum = CallbackMethodPost
	this.CallbackMethod = *NewNullableCallbackMethodEnum(&callbackMethod)
	var fallbackMethod CallbackMethodEnum = CallbackMethodPost
	this.FallbackMethod = *NewNullableCallbackMethodEnum(&fallbackMethod)
	return &this
}

// NewMachineDetectionConfigurationWithDefaults instantiates a new MachineDetectionConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineDetectionConfigurationWithDefaults() *MachineDetectionConfiguration {
	this := MachineDetectionConfiguration{}
	var mode MachineDetectionModeEnum = ASYNC
	this.Mode = &mode
	var detectionTimeout float64 = 15
	this.DetectionTimeout = *NewNullableFloat64(&detectionTimeout)
	var silenceTimeout float64 = 10
	this.SilenceTimeout = *NewNullableFloat64(&silenceTimeout)
	var speechThreshold float64 = 10
	this.SpeechThreshold = *NewNullableFloat64(&speechThreshold)
	var speechEndThreshold float64 = 5
	this.SpeechEndThreshold = *NewNullableFloat64(&speechEndThreshold)
	var delayResult bool = false
	this.DelayResult = *NewNullableBool(&delayResult)
	var callbackMethod CallbackMethodEnum = CallbackMethodPost
	this.CallbackMethod = *NewNullableCallbackMethodEnum(&callbackMethod)
	var fallbackMethod CallbackMethodEnum = CallbackMethodPost
	this.FallbackMethod = *NewNullableCallbackMethodEnum(&fallbackMethod)
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *MachineDetectionConfiguration) GetMode() MachineDetectionModeEnum {
	if o == nil || IsNil(o.Mode) {
		var ret MachineDetectionModeEnum
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineDetectionConfiguration) GetModeOk() (*MachineDetectionModeEnum, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given MachineDetectionModeEnum and assigns it to the Mode field.
func (o *MachineDetectionConfiguration) SetMode(v MachineDetectionModeEnum) {
	o.Mode = &v
}

// GetDetectionTimeout returns the DetectionTimeout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetDetectionTimeout() float64 {
	if o == nil || IsNil(o.DetectionTimeout.Get()) {
		var ret float64
		return ret
	}
	return *o.DetectionTimeout.Get()
}

// GetDetectionTimeoutOk returns a tuple with the DetectionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetDetectionTimeoutOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DetectionTimeout.Get(), o.DetectionTimeout.IsSet()
}

// HasDetectionTimeout returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasDetectionTimeout() bool {
	if o != nil && o.DetectionTimeout.IsSet() {
		return true
	}

	return false
}

// SetDetectionTimeout gets a reference to the given NullableFloat64 and assigns it to the DetectionTimeout field.
func (o *MachineDetectionConfiguration) SetDetectionTimeout(v float64) {
	o.DetectionTimeout.Set(&v)
}
// SetDetectionTimeoutNil sets the value for DetectionTimeout to be an explicit nil
func (o *MachineDetectionConfiguration) SetDetectionTimeoutNil() {
	o.DetectionTimeout.Set(nil)
}

// UnsetDetectionTimeout ensures that no value is present for DetectionTimeout, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetDetectionTimeout() {
	o.DetectionTimeout.Unset()
}

// GetSilenceTimeout returns the SilenceTimeout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetSilenceTimeout() float64 {
	if o == nil || IsNil(o.SilenceTimeout.Get()) {
		var ret float64
		return ret
	}
	return *o.SilenceTimeout.Get()
}

// GetSilenceTimeoutOk returns a tuple with the SilenceTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetSilenceTimeoutOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SilenceTimeout.Get(), o.SilenceTimeout.IsSet()
}

// HasSilenceTimeout returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasSilenceTimeout() bool {
	if o != nil && o.SilenceTimeout.IsSet() {
		return true
	}

	return false
}

// SetSilenceTimeout gets a reference to the given NullableFloat64 and assigns it to the SilenceTimeout field.
func (o *MachineDetectionConfiguration) SetSilenceTimeout(v float64) {
	o.SilenceTimeout.Set(&v)
}
// SetSilenceTimeoutNil sets the value for SilenceTimeout to be an explicit nil
func (o *MachineDetectionConfiguration) SetSilenceTimeoutNil() {
	o.SilenceTimeout.Set(nil)
}

// UnsetSilenceTimeout ensures that no value is present for SilenceTimeout, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetSilenceTimeout() {
	o.SilenceTimeout.Unset()
}

// GetSpeechThreshold returns the SpeechThreshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetSpeechThreshold() float64 {
	if o == nil || IsNil(o.SpeechThreshold.Get()) {
		var ret float64
		return ret
	}
	return *o.SpeechThreshold.Get()
}

// GetSpeechThresholdOk returns a tuple with the SpeechThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetSpeechThresholdOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpeechThreshold.Get(), o.SpeechThreshold.IsSet()
}

// HasSpeechThreshold returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasSpeechThreshold() bool {
	if o != nil && o.SpeechThreshold.IsSet() {
		return true
	}

	return false
}

// SetSpeechThreshold gets a reference to the given NullableFloat64 and assigns it to the SpeechThreshold field.
func (o *MachineDetectionConfiguration) SetSpeechThreshold(v float64) {
	o.SpeechThreshold.Set(&v)
}
// SetSpeechThresholdNil sets the value for SpeechThreshold to be an explicit nil
func (o *MachineDetectionConfiguration) SetSpeechThresholdNil() {
	o.SpeechThreshold.Set(nil)
}

// UnsetSpeechThreshold ensures that no value is present for SpeechThreshold, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetSpeechThreshold() {
	o.SpeechThreshold.Unset()
}

// GetSpeechEndThreshold returns the SpeechEndThreshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetSpeechEndThreshold() float64 {
	if o == nil || IsNil(o.SpeechEndThreshold.Get()) {
		var ret float64
		return ret
	}
	return *o.SpeechEndThreshold.Get()
}

// GetSpeechEndThresholdOk returns a tuple with the SpeechEndThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetSpeechEndThresholdOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpeechEndThreshold.Get(), o.SpeechEndThreshold.IsSet()
}

// HasSpeechEndThreshold returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasSpeechEndThreshold() bool {
	if o != nil && o.SpeechEndThreshold.IsSet() {
		return true
	}

	return false
}

// SetSpeechEndThreshold gets a reference to the given NullableFloat64 and assigns it to the SpeechEndThreshold field.
func (o *MachineDetectionConfiguration) SetSpeechEndThreshold(v float64) {
	o.SpeechEndThreshold.Set(&v)
}
// SetSpeechEndThresholdNil sets the value for SpeechEndThreshold to be an explicit nil
func (o *MachineDetectionConfiguration) SetSpeechEndThresholdNil() {
	o.SpeechEndThreshold.Set(nil)
}

// UnsetSpeechEndThreshold ensures that no value is present for SpeechEndThreshold, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetSpeechEndThreshold() {
	o.SpeechEndThreshold.Unset()
}

// GetMachineSpeechEndThreshold returns the MachineSpeechEndThreshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetMachineSpeechEndThreshold() float64 {
	if o == nil || IsNil(o.MachineSpeechEndThreshold.Get()) {
		var ret float64
		return ret
	}
	return *o.MachineSpeechEndThreshold.Get()
}

// GetMachineSpeechEndThresholdOk returns a tuple with the MachineSpeechEndThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetMachineSpeechEndThresholdOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MachineSpeechEndThreshold.Get(), o.MachineSpeechEndThreshold.IsSet()
}

// HasMachineSpeechEndThreshold returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasMachineSpeechEndThreshold() bool {
	if o != nil && o.MachineSpeechEndThreshold.IsSet() {
		return true
	}

	return false
}

// SetMachineSpeechEndThreshold gets a reference to the given NullableFloat64 and assigns it to the MachineSpeechEndThreshold field.
func (o *MachineDetectionConfiguration) SetMachineSpeechEndThreshold(v float64) {
	o.MachineSpeechEndThreshold.Set(&v)
}
// SetMachineSpeechEndThresholdNil sets the value for MachineSpeechEndThreshold to be an explicit nil
func (o *MachineDetectionConfiguration) SetMachineSpeechEndThresholdNil() {
	o.MachineSpeechEndThreshold.Set(nil)
}

// UnsetMachineSpeechEndThreshold ensures that no value is present for MachineSpeechEndThreshold, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetMachineSpeechEndThreshold() {
	o.MachineSpeechEndThreshold.Unset()
}

// GetDelayResult returns the DelayResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetDelayResult() bool {
	if o == nil || IsNil(o.DelayResult.Get()) {
		var ret bool
		return ret
	}
	return *o.DelayResult.Get()
}

// GetDelayResultOk returns a tuple with the DelayResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetDelayResultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DelayResult.Get(), o.DelayResult.IsSet()
}

// HasDelayResult returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasDelayResult() bool {
	if o != nil && o.DelayResult.IsSet() {
		return true
	}

	return false
}

// SetDelayResult gets a reference to the given NullableBool and assigns it to the DelayResult field.
func (o *MachineDetectionConfiguration) SetDelayResult(v bool) {
	o.DelayResult.Set(&v)
}
// SetDelayResultNil sets the value for DelayResult to be an explicit nil
func (o *MachineDetectionConfiguration) SetDelayResultNil() {
	o.DelayResult.Set(nil)
}

// UnsetDelayResult ensures that no value is present for DelayResult, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetDelayResult() {
	o.DelayResult.Unset()
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetCallbackUrl() string {
	if o == nil || IsNil(o.CallbackUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CallbackUrl.Get()
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallbackUrl.Get(), o.CallbackUrl.IsSet()
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given NullableString and assigns it to the CallbackUrl field.
func (o *MachineDetectionConfiguration) SetCallbackUrl(v string) {
	o.CallbackUrl.Set(&v)
}
// SetCallbackUrlNil sets the value for CallbackUrl to be an explicit nil
func (o *MachineDetectionConfiguration) SetCallbackUrlNil() {
	o.CallbackUrl.Set(nil)
}

// UnsetCallbackUrl ensures that no value is present for CallbackUrl, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetCallbackUrl() {
	o.CallbackUrl.Unset()
}

// GetCallbackMethod returns the CallbackMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetCallbackMethod() CallbackMethodEnum {
	if o == nil || IsNil(o.CallbackMethod.Get()) {
		var ret CallbackMethodEnum
		return ret
	}
	return *o.CallbackMethod.Get()
}

// GetCallbackMethodOk returns a tuple with the CallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetCallbackMethodOk() (*CallbackMethodEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallbackMethod.Get(), o.CallbackMethod.IsSet()
}

// HasCallbackMethod returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasCallbackMethod() bool {
	if o != nil && o.CallbackMethod.IsSet() {
		return true
	}

	return false
}

// SetCallbackMethod gets a reference to the given NullableCallbackMethodEnum and assigns it to the CallbackMethod field.
func (o *MachineDetectionConfiguration) SetCallbackMethod(v CallbackMethodEnum) {
	o.CallbackMethod.Set(&v)
}
// SetCallbackMethodNil sets the value for CallbackMethod to be an explicit nil
func (o *MachineDetectionConfiguration) SetCallbackMethodNil() {
	o.CallbackMethod.Set(nil)
}

// UnsetCallbackMethod ensures that no value is present for CallbackMethod, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetCallbackMethod() {
	o.CallbackMethod.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *MachineDetectionConfiguration) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *MachineDetectionConfiguration) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *MachineDetectionConfiguration) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *MachineDetectionConfiguration) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetPassword() {
	o.Password.Unset()
}

// GetFallbackUrl returns the FallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetFallbackUrl() string {
	if o == nil || IsNil(o.FallbackUrl.Get()) {
		var ret string
		return ret
	}
	return *o.FallbackUrl.Get()
}

// GetFallbackUrlOk returns a tuple with the FallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetFallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FallbackUrl.Get(), o.FallbackUrl.IsSet()
}

// HasFallbackUrl returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasFallbackUrl() bool {
	if o != nil && o.FallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetFallbackUrl gets a reference to the given NullableString and assigns it to the FallbackUrl field.
func (o *MachineDetectionConfiguration) SetFallbackUrl(v string) {
	o.FallbackUrl.Set(&v)
}
// SetFallbackUrlNil sets the value for FallbackUrl to be an explicit nil
func (o *MachineDetectionConfiguration) SetFallbackUrlNil() {
	o.FallbackUrl.Set(nil)
}

// UnsetFallbackUrl ensures that no value is present for FallbackUrl, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetFallbackUrl() {
	o.FallbackUrl.Unset()
}

// GetFallbackMethod returns the FallbackMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetFallbackMethod() CallbackMethodEnum {
	if o == nil || IsNil(o.FallbackMethod.Get()) {
		var ret CallbackMethodEnum
		return ret
	}
	return *o.FallbackMethod.Get()
}

// GetFallbackMethodOk returns a tuple with the FallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetFallbackMethodOk() (*CallbackMethodEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.FallbackMethod.Get(), o.FallbackMethod.IsSet()
}

// HasFallbackMethod returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasFallbackMethod() bool {
	if o != nil && o.FallbackMethod.IsSet() {
		return true
	}

	return false
}

// SetFallbackMethod gets a reference to the given NullableCallbackMethodEnum and assigns it to the FallbackMethod field.
func (o *MachineDetectionConfiguration) SetFallbackMethod(v CallbackMethodEnum) {
	o.FallbackMethod.Set(&v)
}
// SetFallbackMethodNil sets the value for FallbackMethod to be an explicit nil
func (o *MachineDetectionConfiguration) SetFallbackMethodNil() {
	o.FallbackMethod.Set(nil)
}

// UnsetFallbackMethod ensures that no value is present for FallbackMethod, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetFallbackMethod() {
	o.FallbackMethod.Unset()
}

// GetFallbackUsername returns the FallbackUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetFallbackUsername() string {
	if o == nil || IsNil(o.FallbackUsername.Get()) {
		var ret string
		return ret
	}
	return *o.FallbackUsername.Get()
}

// GetFallbackUsernameOk returns a tuple with the FallbackUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetFallbackUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FallbackUsername.Get(), o.FallbackUsername.IsSet()
}

// HasFallbackUsername returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasFallbackUsername() bool {
	if o != nil && o.FallbackUsername.IsSet() {
		return true
	}

	return false
}

// SetFallbackUsername gets a reference to the given NullableString and assigns it to the FallbackUsername field.
func (o *MachineDetectionConfiguration) SetFallbackUsername(v string) {
	o.FallbackUsername.Set(&v)
}
// SetFallbackUsernameNil sets the value for FallbackUsername to be an explicit nil
func (o *MachineDetectionConfiguration) SetFallbackUsernameNil() {
	o.FallbackUsername.Set(nil)
}

// UnsetFallbackUsername ensures that no value is present for FallbackUsername, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetFallbackUsername() {
	o.FallbackUsername.Unset()
}

// GetFallbackPassword returns the FallbackPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineDetectionConfiguration) GetFallbackPassword() string {
	if o == nil || IsNil(o.FallbackPassword.Get()) {
		var ret string
		return ret
	}
	return *o.FallbackPassword.Get()
}

// GetFallbackPasswordOk returns a tuple with the FallbackPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineDetectionConfiguration) GetFallbackPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FallbackPassword.Get(), o.FallbackPassword.IsSet()
}

// HasFallbackPassword returns a boolean if a field has been set.
func (o *MachineDetectionConfiguration) HasFallbackPassword() bool {
	if o != nil && o.FallbackPassword.IsSet() {
		return true
	}

	return false
}

// SetFallbackPassword gets a reference to the given NullableString and assigns it to the FallbackPassword field.
func (o *MachineDetectionConfiguration) SetFallbackPassword(v string) {
	o.FallbackPassword.Set(&v)
}
// SetFallbackPasswordNil sets the value for FallbackPassword to be an explicit nil
func (o *MachineDetectionConfiguration) SetFallbackPasswordNil() {
	o.FallbackPassword.Set(nil)
}

// UnsetFallbackPassword ensures that no value is present for FallbackPassword, not even an explicit nil
func (o *MachineDetectionConfiguration) UnsetFallbackPassword() {
	o.FallbackPassword.Unset()
}

func (o MachineDetectionConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineDetectionConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if o.DetectionTimeout.IsSet() {
		toSerialize["detectionTimeout"] = o.DetectionTimeout.Get()
	}
	if o.SilenceTimeout.IsSet() {
		toSerialize["silenceTimeout"] = o.SilenceTimeout.Get()
	}
	if o.SpeechThreshold.IsSet() {
		toSerialize["speechThreshold"] = o.SpeechThreshold.Get()
	}
	if o.SpeechEndThreshold.IsSet() {
		toSerialize["speechEndThreshold"] = o.SpeechEndThreshold.Get()
	}
	if o.MachineSpeechEndThreshold.IsSet() {
		toSerialize["machineSpeechEndThreshold"] = o.MachineSpeechEndThreshold.Get()
	}
	if o.DelayResult.IsSet() {
		toSerialize["delayResult"] = o.DelayResult.Get()
	}
	if o.CallbackUrl.IsSet() {
		toSerialize["callbackUrl"] = o.CallbackUrl.Get()
	}
	if o.CallbackMethod.IsSet() {
		toSerialize["callbackMethod"] = o.CallbackMethod.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.FallbackUrl.IsSet() {
		toSerialize["fallbackUrl"] = o.FallbackUrl.Get()
	}
	if o.FallbackMethod.IsSet() {
		toSerialize["fallbackMethod"] = o.FallbackMethod.Get()
	}
	if o.FallbackUsername.IsSet() {
		toSerialize["fallbackUsername"] = o.FallbackUsername.Get()
	}
	if o.FallbackPassword.IsSet() {
		toSerialize["fallbackPassword"] = o.FallbackPassword.Get()
	}
	return toSerialize, nil
}

type NullableMachineDetectionConfiguration struct {
	value *MachineDetectionConfiguration
	isSet bool
}

func (v NullableMachineDetectionConfiguration) Get() *MachineDetectionConfiguration {
	return v.value
}

func (v *NullableMachineDetectionConfiguration) Set(val *MachineDetectionConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineDetectionConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineDetectionConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineDetectionConfiguration(val *MachineDetectionConfiguration) *NullableMachineDetectionConfiguration {
	return &NullableMachineDetectionConfiguration{value: val, isSet: true}
}

func (v NullableMachineDetectionConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineDetectionConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



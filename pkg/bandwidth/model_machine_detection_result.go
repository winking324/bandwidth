/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bandwidth

import (
	"encoding/json"
)

// checks if the MachineDetectionResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineDetectionResult{}

// MachineDetectionResult (optional) if machine detection was requested in sync mode, the result will be specified here. Possible values are the same as the async counterpart: Machine Detection Complete
type MachineDetectionResult struct {
	// Possible values are answering-machine, human, silence, timeout, or error.
	Value *string `json:"value,omitempty"`
	// The amount of time it took to determine the result.
	Duration *string `json:"duration,omitempty"`
}

// NewMachineDetectionResult instantiates a new MachineDetectionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineDetectionResult() *MachineDetectionResult {
	this := MachineDetectionResult{}
	return &this
}

// NewMachineDetectionResultWithDefaults instantiates a new MachineDetectionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineDetectionResultWithDefaults() *MachineDetectionResult {
	this := MachineDetectionResult{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *MachineDetectionResult) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineDetectionResult) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *MachineDetectionResult) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *MachineDetectionResult) SetValue(v string) {
	o.Value = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *MachineDetectionResult) GetDuration() string {
	if o == nil || IsNil(o.Duration) {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineDetectionResult) GetDurationOk() (*string, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *MachineDetectionResult) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *MachineDetectionResult) SetDuration(v string) {
	o.Duration = &v
}

func (o MachineDetectionResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineDetectionResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	return toSerialize, nil
}

type NullableMachineDetectionResult struct {
	value *MachineDetectionResult
	isSet bool
}

func (v NullableMachineDetectionResult) Get() *MachineDetectionResult {
	return v.value
}

func (v *NullableMachineDetectionResult) Set(val *MachineDetectionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineDetectionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineDetectionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineDetectionResult(val *MachineDetectionResult) *NullableMachineDetectionResult {
	return &NullableMachineDetectionResult{value: val, isSet: true}
}

func (v NullableMachineDetectionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineDetectionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



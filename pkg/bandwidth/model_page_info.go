/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bandwidth

import (
	"encoding/json"
)

// checks if the PageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageInfo{}

// PageInfo struct for PageInfo
type PageInfo struct {
	// The link to the previous page for pagination.
	PrevPage *string `json:"prevPage,omitempty"`
	// The link to the next page for pagination.
	NextPage *string `json:"nextPage,omitempty"`
	// The isolated pagination token for the previous page.
	PrevPageToken *string `json:"prevPageToken,omitempty"`
	// The isolated pagination token for the next page.
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

// NewPageInfo instantiates a new PageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageInfo() *PageInfo {
	this := PageInfo{}
	return &this
}

// NewPageInfoWithDefaults instantiates a new PageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageInfoWithDefaults() *PageInfo {
	this := PageInfo{}
	return &this
}

// GetPrevPage returns the PrevPage field value if set, zero value otherwise.
func (o *PageInfo) GetPrevPage() string {
	if o == nil || IsNil(o.PrevPage) {
		var ret string
		return ret
	}
	return *o.PrevPage
}

// GetPrevPageOk returns a tuple with the PrevPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageInfo) GetPrevPageOk() (*string, bool) {
	if o == nil || IsNil(o.PrevPage) {
		return nil, false
	}
	return o.PrevPage, true
}

// HasPrevPage returns a boolean if a field has been set.
func (o *PageInfo) HasPrevPage() bool {
	if o != nil && !IsNil(o.PrevPage) {
		return true
	}

	return false
}

// SetPrevPage gets a reference to the given string and assigns it to the PrevPage field.
func (o *PageInfo) SetPrevPage(v string) {
	o.PrevPage = &v
}

// GetNextPage returns the NextPage field value if set, zero value otherwise.
func (o *PageInfo) GetNextPage() string {
	if o == nil || IsNil(o.NextPage) {
		var ret string
		return ret
	}
	return *o.NextPage
}

// GetNextPageOk returns a tuple with the NextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageInfo) GetNextPageOk() (*string, bool) {
	if o == nil || IsNil(o.NextPage) {
		return nil, false
	}
	return o.NextPage, true
}

// HasNextPage returns a boolean if a field has been set.
func (o *PageInfo) HasNextPage() bool {
	if o != nil && !IsNil(o.NextPage) {
		return true
	}

	return false
}

// SetNextPage gets a reference to the given string and assigns it to the NextPage field.
func (o *PageInfo) SetNextPage(v string) {
	o.NextPage = &v
}

// GetPrevPageToken returns the PrevPageToken field value if set, zero value otherwise.
func (o *PageInfo) GetPrevPageToken() string {
	if o == nil || IsNil(o.PrevPageToken) {
		var ret string
		return ret
	}
	return *o.PrevPageToken
}

// GetPrevPageTokenOk returns a tuple with the PrevPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageInfo) GetPrevPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PrevPageToken) {
		return nil, false
	}
	return o.PrevPageToken, true
}

// HasPrevPageToken returns a boolean if a field has been set.
func (o *PageInfo) HasPrevPageToken() bool {
	if o != nil && !IsNil(o.PrevPageToken) {
		return true
	}

	return false
}

// SetPrevPageToken gets a reference to the given string and assigns it to the PrevPageToken field.
func (o *PageInfo) SetPrevPageToken(v string) {
	o.PrevPageToken = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *PageInfo) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageInfo) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *PageInfo) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *PageInfo) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o PageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrevPage) {
		toSerialize["prevPage"] = o.PrevPage
	}
	if !IsNil(o.NextPage) {
		toSerialize["nextPage"] = o.NextPage
	}
	if !IsNil(o.PrevPageToken) {
		toSerialize["prevPageToken"] = o.PrevPageToken
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return toSerialize, nil
}

type NullablePageInfo struct {
	value *PageInfo
	isSet bool
}

func (v NullablePageInfo) Get() *PageInfo {
	return v.value
}

func (v *NullablePageInfo) Set(val *PageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageInfo(val *PageInfo) *NullablePageInfo {
	return &NullablePageInfo{value: val, isSet: true}
}

func (v NullablePageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



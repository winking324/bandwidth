/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bandwidth

import (
	"encoding/json"
)

// checks if the AccountStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountStatistics{}

// AccountStatistics struct for AccountStatistics
type AccountStatistics struct {
	// The number of calls currently enqueued.
	CurrentCallQueueSize *int32 `json:"currentCallQueueSize,omitempty"`
	// The maximum size of the queue before outgoing calls start being rejected.
	MaxCallQueueSize *int32 `json:"maxCallQueueSize,omitempty"`
}

// NewAccountStatistics instantiates a new AccountStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountStatistics() *AccountStatistics {
	this := AccountStatistics{}
	return &this
}

// NewAccountStatisticsWithDefaults instantiates a new AccountStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountStatisticsWithDefaults() *AccountStatistics {
	this := AccountStatistics{}
	return &this
}

// GetCurrentCallQueueSize returns the CurrentCallQueueSize field value if set, zero value otherwise.
func (o *AccountStatistics) GetCurrentCallQueueSize() int32 {
	if o == nil || IsNil(o.CurrentCallQueueSize) {
		var ret int32
		return ret
	}
	return *o.CurrentCallQueueSize
}

// GetCurrentCallQueueSizeOk returns a tuple with the CurrentCallQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatistics) GetCurrentCallQueueSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentCallQueueSize) {
		return nil, false
	}
	return o.CurrentCallQueueSize, true
}

// HasCurrentCallQueueSize returns a boolean if a field has been set.
func (o *AccountStatistics) HasCurrentCallQueueSize() bool {
	if o != nil && !IsNil(o.CurrentCallQueueSize) {
		return true
	}

	return false
}

// SetCurrentCallQueueSize gets a reference to the given int32 and assigns it to the CurrentCallQueueSize field.
func (o *AccountStatistics) SetCurrentCallQueueSize(v int32) {
	o.CurrentCallQueueSize = &v
}

// GetMaxCallQueueSize returns the MaxCallQueueSize field value if set, zero value otherwise.
func (o *AccountStatistics) GetMaxCallQueueSize() int32 {
	if o == nil || IsNil(o.MaxCallQueueSize) {
		var ret int32
		return ret
	}
	return *o.MaxCallQueueSize
}

// GetMaxCallQueueSizeOk returns a tuple with the MaxCallQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatistics) GetMaxCallQueueSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxCallQueueSize) {
		return nil, false
	}
	return o.MaxCallQueueSize, true
}

// HasMaxCallQueueSize returns a boolean if a field has been set.
func (o *AccountStatistics) HasMaxCallQueueSize() bool {
	if o != nil && !IsNil(o.MaxCallQueueSize) {
		return true
	}

	return false
}

// SetMaxCallQueueSize gets a reference to the given int32 and assigns it to the MaxCallQueueSize field.
func (o *AccountStatistics) SetMaxCallQueueSize(v int32) {
	o.MaxCallQueueSize = &v
}

func (o AccountStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentCallQueueSize) {
		toSerialize["currentCallQueueSize"] = o.CurrentCallQueueSize
	}
	if !IsNil(o.MaxCallQueueSize) {
		toSerialize["maxCallQueueSize"] = o.MaxCallQueueSize
	}
	return toSerialize, nil
}

type NullableAccountStatistics struct {
	value *AccountStatistics
	isSet bool
}

func (v NullableAccountStatistics) Get() *AccountStatistics {
	return v.value
}

func (v *NullableAccountStatistics) Set(val *AccountStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountStatistics(val *AccountStatistics) *NullableAccountStatistics {
	return &NullableAccountStatistics{value: val, isSet: true}
}

func (v NullableAccountStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



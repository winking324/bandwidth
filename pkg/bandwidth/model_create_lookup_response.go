/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bandwidth

import (
	"encoding/json"
)

// checks if the CreateLookupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLookupResponse{}

// CreateLookupResponse The request has been accepted for processing but not yet finished and in a terminal state (COMPLETE, PARTIAL_COMPLETE, or FAILED).
type CreateLookupResponse struct {
	// The phone number lookup request ID from Bandwidth.
	RequestId *string `json:"requestId,omitempty"`
	Status *LookupStatusEnum `json:"status,omitempty"`
}

// NewCreateLookupResponse instantiates a new CreateLookupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLookupResponse() *CreateLookupResponse {
	this := CreateLookupResponse{}
	return &this
}

// NewCreateLookupResponseWithDefaults instantiates a new CreateLookupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLookupResponseWithDefaults() *CreateLookupResponse {
	this := CreateLookupResponse{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *CreateLookupResponse) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLookupResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *CreateLookupResponse) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *CreateLookupResponse) SetRequestId(v string) {
	o.RequestId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateLookupResponse) GetStatus() LookupStatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret LookupStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLookupResponse) GetStatusOk() (*LookupStatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateLookupResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given LookupStatusEnum and assigns it to the Status field.
func (o *CreateLookupResponse) SetStatus(v LookupStatusEnum) {
	o.Status = &v
}

func (o CreateLookupResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLookupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCreateLookupResponse struct {
	value *CreateLookupResponse
	isSet bool
}

func (v NullableCreateLookupResponse) Get() *CreateLookupResponse {
	return v.value
}

func (v *NullableCreateLookupResponse) Set(val *CreateLookupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLookupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLookupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLookupResponse(val *CreateLookupResponse) *NullableCreateLookupResponse {
	return &NullableCreateLookupResponse{value: val, isSet: true}
}

func (v NullableCreateLookupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLookupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



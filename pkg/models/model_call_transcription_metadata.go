/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// CallTranscriptionMetadata struct for CallTranscriptionMetadata
type CallTranscriptionMetadata struct {
	// The programmable voice API transcription ID.
	TranscriptionId *string `json:"transcriptionId,omitempty"`
	// The programmable voice API transcription name. This name could be provided by the user when creating the transcription.
	TranscriptionName *string `json:"transcriptionName,omitempty"`
	// A URL that may be used to retrieve the transcription itself. This points to the [Get Call Transcription](/apis/voice/#operation/getCallTranscription) endpoint.
	TranscriptionUrl *string `json:"transcriptionUrl,omitempty"`
}

// NewCallTranscriptionMetadata instantiates a new CallTranscriptionMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallTranscriptionMetadata() *CallTranscriptionMetadata {
	this := CallTranscriptionMetadata{}
	return &this
}

// NewCallTranscriptionMetadataWithDefaults instantiates a new CallTranscriptionMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallTranscriptionMetadataWithDefaults() *CallTranscriptionMetadata {
	this := CallTranscriptionMetadata{}
	return &this
}

// GetTranscriptionId returns the TranscriptionId field value if set, zero value otherwise.
func (o *CallTranscriptionMetadata) GetTranscriptionId() string {
	if o == nil || utils.IsNil(o.TranscriptionId) {
		var ret string
		return ret
	}
	return *o.TranscriptionId
}

// GetTranscriptionIdOk returns a tuple with the TranscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallTranscriptionMetadata) GetTranscriptionIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TranscriptionId) {
		return nil, false
	}
	return o.TranscriptionId, true
}

// HasTranscriptionId returns a boolean if a field has been set.
func (o *CallTranscriptionMetadata) HasTranscriptionId() bool {
	if o != nil && !utils.IsNil(o.TranscriptionId) {
		return true
	}

	return false
}

// SetTranscriptionId gets a reference to the given string and assigns it to the TranscriptionId field.
func (o *CallTranscriptionMetadata) SetTranscriptionId(v string) {
	o.TranscriptionId = &v
}

// GetTranscriptionName returns the TranscriptionName field value if set, zero value otherwise.
func (o *CallTranscriptionMetadata) GetTranscriptionName() string {
	if o == nil || utils.IsNil(o.TranscriptionName) {
		var ret string
		return ret
	}
	return *o.TranscriptionName
}

// GetTranscriptionNameOk returns a tuple with the TranscriptionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallTranscriptionMetadata) GetTranscriptionNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TranscriptionName) {
		return nil, false
	}
	return o.TranscriptionName, true
}

// HasTranscriptionName returns a boolean if a field has been set.
func (o *CallTranscriptionMetadata) HasTranscriptionName() bool {
	if o != nil && !utils.IsNil(o.TranscriptionName) {
		return true
	}

	return false
}

// SetTranscriptionName gets a reference to the given string and assigns it to the TranscriptionName field.
func (o *CallTranscriptionMetadata) SetTranscriptionName(v string) {
	o.TranscriptionName = &v
}

// GetTranscriptionUrl returns the TranscriptionUrl field value if set, zero value otherwise.
func (o *CallTranscriptionMetadata) GetTranscriptionUrl() string {
	if o == nil || utils.IsNil(o.TranscriptionUrl) {
		var ret string
		return ret
	}
	return *o.TranscriptionUrl
}

// GetTranscriptionUrlOk returns a tuple with the TranscriptionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallTranscriptionMetadata) GetTranscriptionUrlOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TranscriptionUrl) {
		return nil, false
	}
	return o.TranscriptionUrl, true
}

// HasTranscriptionUrl returns a boolean if a field has been set.
func (o *CallTranscriptionMetadata) HasTranscriptionUrl() bool {
	if o != nil && !utils.IsNil(o.TranscriptionUrl) {
		return true
	}

	return false
}

// SetTranscriptionUrl gets a reference to the given string and assigns it to the TranscriptionUrl field.
func (o *CallTranscriptionMetadata) SetTranscriptionUrl(v string) {
	o.TranscriptionUrl = &v
}

func (o CallTranscriptionMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallTranscriptionMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.TranscriptionId) {
		toSerialize["transcriptionId"] = o.TranscriptionId
	}
	if !utils.IsNil(o.TranscriptionName) {
		toSerialize["transcriptionName"] = o.TranscriptionName
	}
	if !utils.IsNil(o.TranscriptionUrl) {
		toSerialize["transcriptionUrl"] = o.TranscriptionUrl
	}
	return toSerialize, nil
}

type NullableCallTranscriptionMetadata struct {
	value *CallTranscriptionMetadata
	isSet bool
}

func (v NullableCallTranscriptionMetadata) Get() *CallTranscriptionMetadata {
	return v.value
}

func (v *NullableCallTranscriptionMetadata) Set(val *CallTranscriptionMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableCallTranscriptionMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableCallTranscriptionMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallTranscriptionMetadata(val *CallTranscriptionMetadata) *NullableCallTranscriptionMetadata {
	return &NullableCallTranscriptionMetadata{value: val, isSet: true}
}

func (v NullableCallTranscriptionMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallTranscriptionMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)




// MessagingCodeResponse struct for MessagingCodeResponse
type MessagingCodeResponse struct {
	// Messaging API Message ID.
	MessageId *string `json:"messageId,omitempty"`
}

// NewMessagingCodeResponse instantiates a new MessagingCodeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessagingCodeResponse() *MessagingCodeResponse {
	this := MessagingCodeResponse{}
	return &this
}

// NewMessagingCodeResponseWithDefaults instantiates a new MessagingCodeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagingCodeResponseWithDefaults() *MessagingCodeResponse {
	this := MessagingCodeResponse{}
	return &this
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *MessagingCodeResponse) GetMessageId() string {
	if o == nil || utils.IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagingCodeResponse) GetMessageIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *MessagingCodeResponse) HasMessageId() bool {
	if o != nil && !utils.IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *MessagingCodeResponse) SetMessageId(v string) {
	o.MessageId = &v
}

func (o MessagingCodeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessagingCodeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	return toSerialize, nil
}

type NullableMessagingCodeResponse struct {
	value *MessagingCodeResponse
	isSet bool
}

func (v NullableMessagingCodeResponse) Get() *MessagingCodeResponse {
	return v.value
}

func (v *NullableMessagingCodeResponse) Set(val *MessagingCodeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMessagingCodeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMessagingCodeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessagingCodeResponse(val *MessagingCodeResponse) *NullableMessagingCodeResponse {
	return &NullableMessagingCodeResponse{value: val, isSet: true}
}

func (v NullableMessagingCodeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessagingCodeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



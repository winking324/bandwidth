/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)


// CallTranscriptionResponse struct for CallTranscriptionResponse
type CallTranscriptionResponse struct {
	// The user account associated with the call.
	AccountId *string `json:"accountId,omitempty"`
	// The call id associated with the event.
	CallId *string `json:"callId,omitempty"`
	// The programmable voice API transcription ID.
	TranscriptionId *string `json:"transcriptionId,omitempty"`
	Tracks []CallTranscription `json:"tracks,omitempty"`
}

// NewCallTranscriptionResponse instantiates a new CallTranscriptionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallTranscriptionResponse() *CallTranscriptionResponse {
	this := CallTranscriptionResponse{}
	return &this
}

// NewCallTranscriptionResponseWithDefaults instantiates a new CallTranscriptionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallTranscriptionResponseWithDefaults() *CallTranscriptionResponse {
	this := CallTranscriptionResponse{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CallTranscriptionResponse) GetAccountId() string {
	if o == nil || utils.IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallTranscriptionResponse) GetAccountIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CallTranscriptionResponse) HasAccountId() bool {
	if o != nil && !utils.IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CallTranscriptionResponse) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCallId returns the CallId field value if set, zero value otherwise.
func (o *CallTranscriptionResponse) GetCallId() string {
	if o == nil || utils.IsNil(o.CallId) {
		var ret string
		return ret
	}
	return *o.CallId
}

// GetCallIdOk returns a tuple with the CallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallTranscriptionResponse) GetCallIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.CallId) {
		return nil, false
	}
	return o.CallId, true
}

// HasCallId returns a boolean if a field has been set.
func (o *CallTranscriptionResponse) HasCallId() bool {
	if o != nil && !utils.IsNil(o.CallId) {
		return true
	}

	return false
}

// SetCallId gets a reference to the given string and assigns it to the CallId field.
func (o *CallTranscriptionResponse) SetCallId(v string) {
	o.CallId = &v
}

// GetTranscriptionId returns the TranscriptionId field value if set, zero value otherwise.
func (o *CallTranscriptionResponse) GetTranscriptionId() string {
	if o == nil || utils.IsNil(o.TranscriptionId) {
		var ret string
		return ret
	}
	return *o.TranscriptionId
}

// GetTranscriptionIdOk returns a tuple with the TranscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallTranscriptionResponse) GetTranscriptionIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.TranscriptionId) {
		return nil, false
	}
	return o.TranscriptionId, true
}

// HasTranscriptionId returns a boolean if a field has been set.
func (o *CallTranscriptionResponse) HasTranscriptionId() bool {
	if o != nil && !utils.IsNil(o.TranscriptionId) {
		return true
	}

	return false
}

// SetTranscriptionId gets a reference to the given string and assigns it to the TranscriptionId field.
func (o *CallTranscriptionResponse) SetTranscriptionId(v string) {
	o.TranscriptionId = &v
}

// GetTracks returns the Tracks field value if set, zero value otherwise.
func (o *CallTranscriptionResponse) GetTracks() []CallTranscription {
	if o == nil || utils.IsNil(o.Tracks) {
		var ret []CallTranscription
		return ret
	}
	return o.Tracks
}

// GetTracksOk returns a tuple with the Tracks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallTranscriptionResponse) GetTracksOk() ([]CallTranscription, bool) {
	if o == nil || utils.IsNil(o.Tracks) {
		return nil, false
	}
	return o.Tracks, true
}

// HasTracks returns a boolean if a field has been set.
func (o *CallTranscriptionResponse) HasTracks() bool {
	if o != nil && !utils.IsNil(o.Tracks) {
		return true
	}

	return false
}

// SetTracks gets a reference to the given []CallTranscription and assigns it to the Tracks field.
func (o *CallTranscriptionResponse) SetTracks(v []CallTranscription) {
	o.Tracks = v
}

func (o CallTranscriptionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallTranscriptionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !utils.IsNil(o.CallId) {
		toSerialize["callId"] = o.CallId
	}
	if !utils.IsNil(o.TranscriptionId) {
		toSerialize["transcriptionId"] = o.TranscriptionId
	}
	if !utils.IsNil(o.Tracks) {
		toSerialize["tracks"] = o.Tracks
	}
	return toSerialize, nil
}

type NullableCallTranscriptionResponse struct {
	value *CallTranscriptionResponse
	isSet bool
}

func (v NullableCallTranscriptionResponse) Get() *CallTranscriptionResponse {
	return v.value
}

func (v *NullableCallTranscriptionResponse) Set(val *CallTranscriptionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCallTranscriptionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCallTranscriptionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallTranscriptionResponse(val *CallTranscriptionResponse) *NullableCallTranscriptionResponse {
	return &NullableCallTranscriptionResponse{value: val, isSet: true}
}

func (v NullableCallTranscriptionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallTranscriptionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



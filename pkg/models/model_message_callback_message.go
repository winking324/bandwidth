/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)




// MessageCallbackMessage Message payload schema within a MessageCallback
type MessageCallbackMessage struct {
	Id string `json:"id"`
	Owner string `json:"owner"`
	ApplicationId string `json:"applicationId"`
	Time time.Time `json:"time"`
	SegmentCount int32 `json:"segmentCount"`
	Direction MessageDirectionEnum `json:"direction"`
	To []string `json:"to"`
	From string `json:"from"`
	Text string `json:"text"`
	Tag *string `json:"tag,omitempty"`
	// Optional media, applicable only for mms
	Media []string `json:"media,omitempty"`
	Priority *PriorityEnum `json:"priority,omitempty"`
}

type _MessageCallbackMessage MessageCallbackMessage

// NewMessageCallbackMessage instantiates a new MessageCallbackMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageCallbackMessage(id string, owner string, applicationId string, time time.Time, segmentCount int32, direction MessageDirectionEnum, to []string, from string, text string) *MessageCallbackMessage {
	this := MessageCallbackMessage{}
	this.Id = id
	this.Owner = owner
	this.ApplicationId = applicationId
	this.Time = time
	this.SegmentCount = segmentCount
	this.Direction = direction
	this.To = to
	this.From = from
	this.Text = text
	return &this
}

// NewMessageCallbackMessageWithDefaults instantiates a new MessageCallbackMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageCallbackMessageWithDefaults() *MessageCallbackMessage {
	this := MessageCallbackMessage{}
	return &this
}

// GetId returns the Id field value
func (o *MessageCallbackMessage) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MessageCallbackMessage) SetId(v string) {
	o.Id = v
}

// GetOwner returns the Owner field value
func (o *MessageCallbackMessage) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *MessageCallbackMessage) SetOwner(v string) {
	o.Owner = v
}

// GetApplicationId returns the ApplicationId field value
func (o *MessageCallbackMessage) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *MessageCallbackMessage) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetTime returns the Time field value
func (o *MessageCallbackMessage) GetTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *MessageCallbackMessage) SetTime(v time.Time) {
	o.Time = v
}

// GetSegmentCount returns the SegmentCount field value
func (o *MessageCallbackMessage) GetSegmentCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SegmentCount
}

// GetSegmentCountOk returns a tuple with the SegmentCount field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetSegmentCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SegmentCount, true
}

// SetSegmentCount sets field value
func (o *MessageCallbackMessage) SetSegmentCount(v int32) {
	o.SegmentCount = v
}

// GetDirection returns the Direction field value
func (o *MessageCallbackMessage) GetDirection() MessageDirectionEnum {
	if o == nil {
		var ret MessageDirectionEnum
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetDirectionOk() (*MessageDirectionEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *MessageCallbackMessage) SetDirection(v MessageDirectionEnum) {
	o.Direction = v
}

// GetTo returns the To field value
func (o *MessageCallbackMessage) GetTo() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetToOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.To, true
}

// SetTo sets field value
func (o *MessageCallbackMessage) SetTo(v []string) {
	o.To = v
}

// GetFrom returns the From field value
func (o *MessageCallbackMessage) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *MessageCallbackMessage) SetFrom(v string) {
	o.From = v
}

// GetText returns the Text field value
func (o *MessageCallbackMessage) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *MessageCallbackMessage) SetText(v string) {
	o.Text = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *MessageCallbackMessage) GetTag() string {
	if o == nil || utils.IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetTagOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *MessageCallbackMessage) HasTag() bool {
	if o != nil && !utils.IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *MessageCallbackMessage) SetTag(v string) {
	o.Tag = &v
}

// GetMedia returns the Media field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MessageCallbackMessage) GetMedia() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageCallbackMessage) GetMediaOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *MessageCallbackMessage) HasMedia() bool {
	if o != nil && !utils.IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given []string and assigns it to the Media field.
func (o *MessageCallbackMessage) SetMedia(v []string) {
	o.Media = v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *MessageCallbackMessage) GetPriority() PriorityEnum {
	if o == nil || utils.IsNil(o.Priority) {
		var ret PriorityEnum
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageCallbackMessage) GetPriorityOk() (*PriorityEnum, bool) {
	if o == nil || utils.IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *MessageCallbackMessage) HasPriority() bool {
	if o != nil && !utils.IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given PriorityEnum and assigns it to the Priority field.
func (o *MessageCallbackMessage) SetPriority(v PriorityEnum) {
	o.Priority = &v
}

func (o MessageCallbackMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageCallbackMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["owner"] = o.Owner
	toSerialize["applicationId"] = o.ApplicationId
	toSerialize["time"] = o.Time
	toSerialize["segmentCount"] = o.SegmentCount
	toSerialize["direction"] = o.Direction
	toSerialize["to"] = o.To
	toSerialize["from"] = o.From
	toSerialize["text"] = o.Text
	if !utils.IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if o.Media != nil {
		toSerialize["media"] = o.Media
	}
	if !utils.IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	return toSerialize, nil
}

func (o *MessageCallbackMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"owner",
		"applicationId",
		"time",
		"segmentCount",
		"direction",
		"to",
		"from",
		"text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageCallbackMessage := _MessageCallbackMessage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMessageCallbackMessage)

	if err != nil {
		return err
	}

	*o = MessageCallbackMessage(varMessageCallbackMessage)

	return err
}

type NullableMessageCallbackMessage struct {
	value *MessageCallbackMessage
	isSet bool
}

func (v NullableMessageCallbackMessage) Get() *MessageCallbackMessage {
	return v.value
}

func (v *NullableMessageCallbackMessage) Set(val *MessageCallbackMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageCallbackMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageCallbackMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageCallbackMessage(val *MessageCallbackMessage) *NullableMessageCallbackMessage {
	return &NullableMessageCallbackMessage{value: val, isSet: true}
}

func (v NullableMessageCallbackMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageCallbackMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



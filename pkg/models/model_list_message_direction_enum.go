/*
Bandwidth

Bandwidth's Communication APIs

API version: 1.0.0
Contact: letstalk@bandwidth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ListMessageDirectionEnum The direction of the message. One of INBOUND OUTBOUND.
type ListMessageDirectionEnum string

// List of listMessageDirectionEnum
const (
	INBOUND ListMessageDirectionEnum = "INBOUND"
	OUTBOUND ListMessageDirectionEnum = "OUTBOUND"
)

// All allowed values of ListMessageDirectionEnum enum
var AllowedListMessageDirectionEnumEnumValues = []ListMessageDirectionEnum{
	"INBOUND",
	"OUTBOUND",
}

func (v *ListMessageDirectionEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ListMessageDirectionEnum(value)
	for _, existing := range AllowedListMessageDirectionEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ListMessageDirectionEnum", value)
}

// NewListMessageDirectionEnumFromValue returns a pointer to a valid ListMessageDirectionEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewListMessageDirectionEnumFromValue(v string) (*ListMessageDirectionEnum, error) {
	ev := ListMessageDirectionEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ListMessageDirectionEnum: valid values are %v", v, AllowedListMessageDirectionEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ListMessageDirectionEnum) IsValid() bool {
	for _, existing := range AllowedListMessageDirectionEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to listMessageDirectionEnum value
func (v ListMessageDirectionEnum) Ptr() *ListMessageDirectionEnum {
	return &v
}

type NullableListMessageDirectionEnum struct {
	value *ListMessageDirectionEnum
	isSet bool
}

func (v NullableListMessageDirectionEnum) Get() *ListMessageDirectionEnum {
	return v.value
}

func (v *NullableListMessageDirectionEnum) Set(val *ListMessageDirectionEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableListMessageDirectionEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableListMessageDirectionEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMessageDirectionEnum(val *ListMessageDirectionEnum) *NullableListMessageDirectionEnum {
	return &NullableListMessageDirectionEnum{value: val, isSet: true}
}

func (v NullableListMessageDirectionEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMessageDirectionEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

